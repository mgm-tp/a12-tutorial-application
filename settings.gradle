rootProject.name = 'your-project-name'

include 'client'
include 'compose'
include 'server'
include 'server:app'
include 'server:init'
include 'import'

dependencyResolutionManagement {
    def springBootVersion = '3.2.3'
    versionCatalogs {
        gradlePluginLibs {
            version('spring-boot', springBootVersion)
            version('test-logger', '3.2.0')
            version('docker-compose', '0.17.6')
            version('docker-remote-api', '9.3.1')
            version('versions-update', '0.42.0')
            version('node-gradle', '7.0.1')
            version('sonarqube-scanner','4.4.1.3373')

            plugin('spring-boot', 'org.springframework.boot').versionRef('spring-boot')
            plugin('test-logger', 'com.adarshr.test-logger').versionRef('test-logger')
            plugin('docker-compose', 'com.avast.gradle.docker-compose').versionRef('docker-compose')
            plugin('docker-remote-api', 'com.bmuschko.docker-remote-api').versionRef('docker-remote-api')
            plugin('versions-update', 'com.github.ben-manes.versions').versionRef('versions-update')
            plugin('node-gradle', 'com.github.node-gradle.node').versionRef('node-gradle')
            plugin('sonarqube', 'org.sonarqube').versionRef('sonarqube-scanner')
        }

        a12Libs {
            version('base', '28.0.0')
            version('kernel', '29.0.0-rc.04')
            version('uaa', '8.0.0-rc.4')
            version('dataservices', '37.0.0-rc.3')

            library('uaa-authorization-a12-extension', 'com.mgmtp.a12.uaa', 'uaa-authorization-a12-extension').versionRef('uaa')

            library('dataservices-server-app', 'com.mgmtp.a12.dataservices', 'dataservices-server-app').versionRef('dataservices')
            library('dataservices-server-init-app', 'com.mgmtp.a12.dataservices', 'dataservices-server-init-app').versionRef('dataservices')

            library('base-bom', 'com.mgmtp.a12.base', 'base-virtual-bom').versionRef('base')
            library('kernel-bom', 'com.mgmtp.a12.kernel', 'kernel-bom').versionRef('kernel')
            library('uaa-bom', 'com.mgmtp.a12.uaa', 'uaa-bom').versionRef('uaa')
            library('dataservices-bom', 'com.mgmtp.a12.dataservices', 'dataservices-parent').versionRef('dataservices')
        }

        libs {
            version('spring-boot', springBootVersion)

            library('spring-boot-configuration-processor', 'org.springframework.boot', 'spring-boot-configuration-processor').versionRef('spring-boot')
            library('spring-boot-devtools', 'org.springframework.boot', 'spring-boot-devtools').versionRef('spring-boot')
        }

        testCatalogLibs {
            version('spring-boot', springBootVersion)
            library('spring-boot-starter-test', 'org.springframework.boot', 'spring-boot-starter-test').versionRef('spring-boot')
        }
    }
}

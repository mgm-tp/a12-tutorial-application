import com.mgmtp.a12.A12AlignmentRule

plugins {
    id 'java'
    alias(gradlePluginLibs.plugins.spring.boot)
    alias(gradlePluginLibs.plugins.test.logger)
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

ext {
    serviceName = rootProject.serverName
    imageLabels = ["name"       : "${calculateShortTag(rootProject.serverName)}".toString(),
                   "vendor"     : "mgm technology partners GmbH",
                   "version"    : packageJsonVersion,
                   "release"    : project.version,
                   "summary"    : "A Data Services extensible server application that provides all functionalities to facilitate A12 Application",
                   "description": "A Data Services server with API and implementations to deal with models and documents supporting creation, retrieval, update, deletion and querying"]
}

dependencies {

    // Spring
    annotationProcessor libs.spring.boot.configuration.processor
    developmentOnly(libs.spring.boot.devtools)

    // Align A12 Versions
    components.all(A12AlignmentRule)

    // A12 Dataservices
    implementation a12Libs.dataservices.server.app

    // A12 UAA
    implementation a12Libs.uaa.authorization.a12.extension

    // Virtual BOMs
    implementation(platform(a12Libs.base.bom))

    // Native BOMs
    implementation(platform(a12Libs.kernel.bom))
    implementation(platform(a12Libs.uaa.bom))
    implementation(platform(a12Libs.dataservices.bom))
}

springBoot {
    mainClass = 'com.mgmtp.a12.tutorial.server.TutorialServerApplication'
    buildInfo {
        properties {
            version = rootProject.version
        }
    }
}

artifacts artifactsVar

publishing publishingVar

// Docker builds
bootBuildImage bootBuildImageVar
